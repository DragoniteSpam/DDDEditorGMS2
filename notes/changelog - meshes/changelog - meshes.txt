Another changelog.

# Changes in 2023.4

 - Importing multiple models with missing texture files wont add a billion copies of the magenta texture

# Changes in 2023.3

 - We can now import (and export) fbx, dae, 3ds, gltf/b, stl, and ply/b 3D files, courtesy of the Open Asset Importer Library
     - At the moment the feature is pretty patchy:
         - Importing is mostly limited to static meshes, which means no animations will be loaded from file formats that support them
         - Materials may work, but it's not always able to find the corresponding texture files
         - Performance could be better
         - This is the full list of 3D file formats that assimp can understand: https://assimp-docs.readthedocs.io/en/latest/usage/use_the_lib.html#exporting-models
            I've only implemented the most common ones in GML. If you need one that's not there for some reason, I'll add it
 - Updated Scribble to 8.7
 - The text cursor flashes a little faster, I found it got lost sometimes at a period of two seconds

# Changes in 2023.2

 - penguin_load
     - Optional parameter for freezing loaded vertex buffers, defaults to true
     - You can now load some of the basic collision shapes (see below)
 - Enabled collision shapes in the mesh editor
     - Currently you can define spheres and AABBs; I may or may not add more later
     - If you're using the import scripts, they're included in those (see the documentation for the import scripts)
 - Reload from source: meshes/submeshes remember the file they were loaded from
     - There's a nice easy button for reloading a submesh from the source file, in case you made changes and want to update them in the game
 - Replaced a few functions that now have built-in versions (string splitting, etc), which gives a minor speed boost in some places
     - Actually, obj importing has been sped up by quite a lot; however, there have been a lot of changes, and while I've made sure a few basic test shapes still work, if any obj files that used to work now fail, let me know
 - Fixed the axis colors (red = x, green = y, z = blue) so that they're in line with the colors pretty much everyone else uses
 - The cursor flashes a little faster, I found it got lost sometimes at a period of two seconds

 - Removed a few crashes, mostly related to deleting meshes from a project

To do:

 - Operations affecting meshes such as transformations, mirror, scale, etc should also affect their collision shapes

# Changes in 2022.0.5.90

 - Fixed "combine submeshes" prepending a bunch of empty vertices
 - Fixed "export obj" crashing

# Changes in 2022.0.5

 - Projects can be saved and loaded
 - Added a "snap to floor" mesh operation
 - Added an export option to save all (selected) meshes to a single file, for fast(er) loading
     - Meshes are exported as vertex buffers
     - Attributes such as material settings and submesh hierarchy are preserved
     - Can be loaded quickly with the provided Penguin scripts

 - Fixed the stupid issue where transforming a mesh in particular ways screws with the normals
 - Fixed the number bounds on the mesh transform UI (not allowing negative rotations, etc)

# Changes since 2022.0.2.78

 - Rewrote most of the tooling from scratch in C++ to make it considerably faster
 - Enabled the submesh manager in the mesh editor
 - Added a "Reset" button to the viewer settings dialog